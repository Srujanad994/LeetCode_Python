#Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

#You may assume that each input would have exactly one solution, and you may not use the same element twice.

#You can return the answer in any order.


 

#Example 1:

#Input: nums = [2,7,11,15], target = 9
#Output: [0,1]
#Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
#Example 2:

#Input: nums = [3,2,4], target = 6
#Output: [1,2]
#Example 3:

#Input: nums = [3,3], target = 6
#Output: [0,1]
####################################################################################


class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        :type output_list: List[int]
        """
        output_list=self.get_output(nums,target)
        return output_list
        exit()
        
    def get_output(self,nums,target):
        i=int(0)
        j=int(1)
        out_list=[]
        try:
            for i in range(0,len(nums),1):
                #print("in i loop")
                #print(i,j)
                for j in range(i+1,len(nums),1):
                    #print("in j loop")
                    #print(i,j)
                    #print(nums[i],nums[i+j])
                    if(nums[i]+nums[j]==target):
                        out_list=[i,j]
                        #print(i,j)
                        return out_list
                        break
                    # else:
                    #     j+=1  
                    #     i+=1
        except:
            #print"Exception occuured")
            exit()
